name: Test

on:
  push:
    branches:
      - dependabot/**

  pull_request:
    types:
      - opened
      - synchronize

  workflow_call:

jobs:
  test:
    name: Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install Dependencies
        run: |
          echo "$HOME/.composer/vendor/bin" >> $GITHUB_PATH
          composer update
      - name: Super Linter Code Base
        uses: github/super-linter/slim@v5
        env:
          FILTER_REGEX_INCLUDE: "/src/*|/tests/*|updateVersion.sh"
          DEFAULT_BRANCH: master
          VALIDATE_PHP: true
          VALIDATE_PHP_PHPCS: true
          VALIDATE_PHP_PHPSTAN: true
          VALIDATE_BASH: true
          VALIDATE_ALL_CODEBASE: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test_matrix:
    strategy:
      matrix:
        php-version: ${{ fromJson(vars.RTLDEV_MW_CI_PHP_MATRIX) }}

    name: Test Matrix @ PHP v${{ matrix.php-version }}
    runs-on: ubuntu-latest

    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Install Dependencies::PHP${{ matrix.php-version }}
        run: |
          echo "$HOME/.composer/vendor/bin" >> $GITHUB_PATH
          composer update
      - name: Code Validation
        env:
          TESTS_USER_HEXONET: ${{ secrets.TESTS_USER_HEXONET }}
          TESTS_USERPASSWORD_HEXONET: ${{ secrets.TESTS_USERPASSWORD_HEXONET }}
          TESTS_USER_CNR: ${{ secrets.TESTS_USER_CNR }}
          TESTS_USERPASSWORD_CNR: ${{ secrets.TESTS_USERPASSWORD_CNR }}
        run: composer run-script test
